TODO: 
    High-Priority:
        * update regions3.c/regions3_growORTH() to solve linearity constraint, 
            using non-linear region growing using transformed line priors
        * detect_outliers.py/detect_outliers() update pca/gmm solution to be 
            more robust to reduced point sets (eg 0.5 scaling in demo.py/__main__)
            for faster prototyping 
    Medium-Priority
        * sliding window with overlap given large data for import_fits,
            to prevent memory crashing
        * create "estimate noise" function to test detection performance under improved markov kernels
        * ASTRIA-Net pipeline integration (json output)
        * differentiate spatial and temporal markov kernels,
            medium-priority due to similarity of results when tested
    Low-Priority
        * for acceleration when not involving loops to compute markov kernels,
            compute gradient matrices only once and share across LSD3M
    
    
------------------------------------------------------------------

06/07/2021
    *astrometry.net plate solving introduced to end of PyCIS for updating FITS files
        * setup.sh, pylib/run_astrometry.py, pylib/import_fits.py

------------------------------------------------------------------

06/02/2021
    *Reformulate region3s.c/region3_grow() and regions3.c/get_theta3()
        with new antipodal correction via gradient.c/isaligned3_sign(), align3()
    *Correct conflict in spatiotemporal gradient computation by separating 
        spatial (2D) and temporal (3D) detections, in lsd3b.c
        * region2.c / region_growORTH(), rect_improve_update(), rect_imporveORTH(), refineORTH()
        * rectangles2.v/rect_nfaORTH
        * interface.c / lsd3b(), lsd3centerb() [calling functions]
        * lsd3b.c [entierly new - adapted from lsd2, lsd3]
        * pycis.c [markovOnly==0 call from lsd3 to lsd3b]
    *Improved PCA scheme in detect_outliers.py/detect_outliers()
        *Utilize width infomation with stronger dimension reduction
        *Projection from rank-5 space (length, orientation, widths) to rank-3
    *Improved plotting function print_detections.py/print_detections()
        *automatic scalling for reduced storage cost 
        *built-in printing of GIF files 

------------------------------------------------------------------

04/30/2021
    *Initial Upload

------------------------------------------------------------------
